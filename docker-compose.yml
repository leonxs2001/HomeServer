version: '3.9'

services:
  db:
    image: mysql:8.0
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    networks:
      - backend

  web:
    build: .
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/templates
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    environment:
      CERTBOT_DOMAINS: ${CERTBOT_DOMAINS}
      PRIMARY_DOMAIN: ${PRIMARY_DOMAIN}
    entrypoint: /bin/sh -c "envsubst < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - web
    networks:
      - backend

  certbot_init:
    image: certbot/certbot
    depends_on:
      - nginx
    env_file:
      - .env
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: >
      sh -c "certbot certonly --webroot
      --webroot-path=/var/www/certbot
      --email $CERTBOT_EMAIL
      --agree-tos --no-eff-email
      $(for domain in $(echo $CERTBOT_DOMAINS | tr ' ' '\n'); do echo -n \"-d $domain \"; done)"
    networks:
      - backend

  certbot_renew:
    image: certbot/certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done"
    networks:
      - backend

volumes:
  db_data:
  certbot_certs:
  certbot_www:

networks:
  backend:
